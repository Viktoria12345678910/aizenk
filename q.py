# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'q.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import subprocess

class Ui_MainWindow(object):
    cq = 0  # Initialize cq as a class variable
    question_count = 61  # Total number of questions

    yfEpo = [1, 3, 9, 11, 14, 17, 19, 22, 25, 27, 30, 35, 38, 41, 43, 46, 49, 53, 57]
    nfEpo = [ 6, 33, 51, 55, 59.]
    nfNpo = [2, 5, 7, 10, 13, 15, 18, 21, 23, 26, 29, 31, 34, 37, 39, 42, 45, 47, 50, 52, 54, 56, 58, 60.]
    
    N = int(0)
    E = int(0)
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(900, 500)
        font = QtGui.QFont()
        font.setFamily("Garamond")
        font.setPointSize(24)
        MainWindow.setFont(font)

        self.q = QtWidgets.QLabel(MainWindow)
        self.q.setGeometry(QtCore.QRect(50, 10, 800, 200))
        font = QtGui.QFont()
        self.q.setWordWrap(True)
        font.setFamily("Garamond")
        font.setPointSize(20)
        self.q.setFont(font)
        self.q.setAlignment(QtCore.Qt.AlignCenter)
        self.q.setObjectName("q")

        self.result = QtWidgets.QLabel(MainWindow)
        self.result.setGeometry(QtCore.QRect(10, 0, 255, 51))
        self.result.setWordWrap(True)
        font = QtGui.QFont()
        font.setFamily("Garamond")
        font.setPointSize(20)
        self.result.setFont(font)
        self.result.setObjectName("result")

        self.result_desc = QtWidgets.QLabel(MainWindow)
        self.result_desc.setGeometry(QtCore.QRect(100, 60, 800, 400))
        self.result_desc.setWordWrap(True)
        font = QtGui.QFont()
        font.setFamily("Garamond")
        font.setPointSize(20)
        self.result_desc.setFont(font)
        self.result_desc.setObjectName("result_desc")


        self.no = QtWidgets.QPushButton(MainWindow)
        self.no.setGeometry(QtCore.QRect(700, 200, 171, 71))
        font = QtGui.QFont()
        font.setFamily("Garamond")
        font.setPointSize(24)
        self.no.setFont(font)
        self.no.setObjectName("no")
        self.no.clicked.connect(self.no_f)

        self.yes = QtWidgets.QPushButton(MainWindow)
        self.yes.setGeometry(QtCore.QRect(40, 200, 171, 71))
        font = QtGui.QFont()
        font.setFamily("Garamond")
        font.setPointSize(24)
        self.yes.setFont(font)
        self.yes.setObjectName("yes")
        self.yes.clicked.connect(self.yes_f)
    
        self.finish = QtWidgets.QPushButton(MainWindow)
        self.finish.setGeometry(QtCore.QRect(350, 300, 250, 71))
        font = QtGui.QFont()
        font.setFamily("Garamond")
        font.setPointSize(24)
        self.finish.setFont(font)
        self.finish.setObjectName("finish")
        self.finish.clicked.connect(self.finish_f)

        # self.res = QtWidgets.QPushButton(MainWindow)
        # self.res.setGeometry(QtCore.QRect(350, 300, 250, 71))
        # font = QtGui.QFont()
        # font.setFamily("Garamond")
        # font.setPointSize(24)
        # self.res.setFont(font)
        # self.res.setObjectName("res")    
        # self.res.clicked.connect(self.res_c)
        # self.res.hide()
        

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def retranslateUi(self, MainWindow):

        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.no.setText(_translate("MainWindow", "ні"))
        self.yes.setText(_translate("MainWindow", "так"))
        self.q.setText(_translate("MainWindow", "1. Вам подобаються гамір, жвавість, енергійність у вашому оточені?"))
        self.finish.setText(_translate("MainWindow", "закінчити"))
        # self.res.setText(_translate("MainWindow", "результат"))

        with open("q", "r", encoding="utf-8") as t:
            self.t = t.readlines()
    
    def next_variant(self, cq):
        self.cq += 1
        self.q.setText(self.t[cq])

    def no_f(self, cq):
        if cq in self.nfEpo :
            self.E += 1
        elif cq in self.nfNpo:
            self.N += 1
        self.next_variant(self.cq)
        self.hide_f(cq)

    def yes_f(self, cq):
        if cq in self.yfEpo:
            self.E += 1
        self.next_variant(self.cq)
        self.hide_f(cq)

    def hide_f(self, cq):
        if cq == 60:
            self.yes.hide()
            self.no.hide()

    def get_E(self):
        return self.E
        int(self.E)

    def get_N(self):
        return self.N
    if E is None:
        E = self.get_E()
    if N is None:
        N = self.get_N

    def res_f(self, E, N):

        if E > 12 and N > 14:
            self.result.setText(_translate("MainWindow", "Ви - холерик"))
            self.result_desc.setText(_translate("MainWindow", "Дії холерика поривчасті. Він відрізняється підвищеною збудженістю та великою емоційністю. Прояв цього типу темпераменту в значній мірі залежить від спрямованості особистості. У людей із громадськими інтересами він фокусується в ініціативності, енергійності, принциповості. Там, де немає багатства духовного життя, холеричний темперамент проявляється негативно (роздратованість, афективність)."))
        elif E > 12 and N < 14:
            self.result.setText(_translate("MainWindow", "Ви - сангвінік"))
            self.result_desc.setText(_translate("MainWindow", "Сангвінік швидко пристосовується до нових умов, швидко знаходить спільну розмову з людьми, комунікативний. Почуття швидко виникають і зникають. У людини цього типу яскрава міміка. Відсутність чіткої мети, не включеність сангвініка у творчу діяльність поступово формується в поверховість і нестабільність."))
        elif E < 12 and N >14:
            self.result.setText(_translate("MainWindow", "Ви - меланхолік"))
            self.result_desc.setText(_translate("MainWindow", "Реакція меланхоліка здебільшого відповідає силі подразника. Особливо потужне в людини цього типу темпераменту зовнішнє гальмування. Йому тяжко на чомусь зосередитись. Сильні подразники здебільшого викликають довготривалу реакцію гальмування. У стійких та стабільних умовах життя меланхолік характеризується змістовністю й глибиною думок. У негативних зовнішніх умовах меланхолік може стати замкнутим, боягузливим, неспокійним."))
        print(E, N)
                

    # def res_c(self):
        # self.res_f(self.E, self.N)

    def finish_f(self):

        # self.finish.hide()
        self.q.setText(" ")
        # self.res.show()
        self.res_f(self.E, self.N)

        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
